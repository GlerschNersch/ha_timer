blueprint:
  name: Announce When Timer Finishes
  description: >
    Sends a TTS announcement and/or notification when a timer finishes.
  domain: automation
  input:
    timer_entity:
      name: Timer
      description: The timer to watch
      selector:
        entity:
          domain: timer

    use_tts:
      name: Announce with TTS
      default: false
      selector:
        boolean:

    media_player:
      name: Media Player (for TTS)
      default: null
      selector:
        entity:
          domain: media_player

    send_ui_notification:
      name: Send Bell Notification
      default: true
      selector:
        boolean:

    send_mobile_notification:
      name: Send Push to Mobile
      default: false
      selector:
        boolean:

mode: single

trigger:
  - platform: state
    entity_id: !input timer_entity
    to: "idle"

action:
  - variables:
      friendly_name: "{{ state_attr(timer_entity, 'friendly_name') or timer_entity }}"
      message_text: "Time is up! The timer for {{ friendly_name }} has finished."

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ use_tts and media_player is not none }}"
        sequence:
          - service: tts.google_translate_say
            data:
              entity_id: !input media_player
              message: "{{ message_text }}"

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ send_ui_notification }}"
        sequence:
          - service: persistent_notification.create
            data:
              title: "Timer Done"
              message: "{{ message_text }}"

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ send_mobile_notification }}"
        sequence:
          - service: notify.mobile_app_pixel_9_pro_fold
            data:
              title: "Timer Done"
              message: "{{ message_text }}"
