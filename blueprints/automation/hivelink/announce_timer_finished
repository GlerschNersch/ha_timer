blueprint:
  name: Announce When Timer Finishes
  description: >
    Announces a message when the selected timer finishes. You can enable TTS, push notification,
    or a UI (persistent) notification. Uses a more reliable state-based trigger.
  domain: automation
  input:
    target_timer:
      name: Timer
      selector:
        entity:
          domain: timer

    use_tts:
      name: Use TTS
      default: false
      selector:
        boolean:

    media_player:
      name: Media Player (required if using TTS)
      default: null
      selector:
        entity:
          domain: media_player

    send_notification:
      name: Send Persistent Notification to Bell Icon
      default: false
      selector:
        boolean:

    send_push:
      name: Send Mobile Push Notification
      default: false
      selector:
        boolean:

    mobile_notify_target:
      name: Mobile Notify Service (optional)
      description: Example: notify.mobile_app_your_phone
      default: ""
      selector:
        text:
          multiline: false

mode: single

trigger:
  - platform: state
    entity_id: !input target_timer
    to: "idle"

action:
  - variables:
      timer_name: "{{ state_attr(target_timer, 'friendly_name') or target_timer }}"
      tts_message: "Time is up! The timer for {{ timer_name }} has ended."

  # ðŸ”Š TTS
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ use_tts and media_player is not none }}"
        sequence:
          - service: logbook.log
            data:
              name: "TTS Message"
              message: "{{ tts_message }}"
          - service: tts.google_translate_say
            data:
              entity_id: !input media_player
              message: "{{ tts_message }}"

  # ðŸ”” UI Notification
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ send_notification }}"
        sequence:
          - service: persistent_notification.create
            data:
              title: "Timer Finished"
              message: "{{ tts_message }}"

  # ðŸ“± Mobile Push
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ send_push and mobile_notify_target != '' }}"
        sequence:
          - service: "{{ mobile_notify_target }}"
            data:
              title: "Timer Finished"
              message: "{{ tts_message }}"
